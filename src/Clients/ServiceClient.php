<?php
/**
 * @Author yaangvu
 * @Date   May 20, 2022
 */

namespace Yaangvu\LaravelKong\Clients;

use Yaangvu\LaravelKong\Models\Service;

class ServiceClient extends KongClient
{
    protected string $path  = '/services';
    protected string $model = Service::class;

    /**
     * @inheritDoc
     *
     * @return Service[]
     */
    public function index(array $params = []): array
    {
        return parent::index($params); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     *
     * @return Service
     */
    public function show(string $id): Service
    {
        return parent::show($id); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     *
     * @param Service $kongEntity
     *
     * @return Service
     */
    public function store($kongEntity): Service
    {
        return parent::store($kongEntity); // TODO: Change the autogenerated stub
    }

    /**
     * @Description Handle Upstream data before insert or update
     *
     * @Author      yaangvu
     * @Date        May 20, 2022
     *
     * @param Service $kongEntity
     *
     * @return array
     */
    public function _handleData($kongEntity): array
    {
        return [
            'host'               => $kongEntity->getHost(),
            'connect_timeout'    => $kongEntity->getConnectTimeout(),
            'protocol'           => $kongEntity->getProtocol(),
            'name'               => $kongEntity->getName(),
            'read_timeout'       => $kongEntity->getReadTimeout(),
            'port'               => $kongEntity->getPort(),
            'path'               => $kongEntity->getPath(),
            'retries'            => $kongEntity->getRetries(),
            'write_timeout'      => $kongEntity->getWriteTimeout(),
            'tags'               => $kongEntity->getTags(),
            'client_certificate' => $kongEntity->getClientCertificate()
        ];
    }

    /**
     * @inheritDoc
     *
     * @param Service $kongEntity
     *
     * @return Service
     */
    public function update($id, $kongEntity): Service
    {
        return parent::update($id, $kongEntity); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     *
     * @param Service $kongEntity
     *
     * @return Service
     */
    public function updateOrCreate($kongEntity): Service
    {
        return parent::updateOrCreate($kongEntity); // TODO: Change the autogenerated stub
    }
}